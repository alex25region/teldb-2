Создание контроллеров:

php artisan make:controller Admin\TPostsController -r
php artisan make:controller Admin\TOtdelsController -r
php artisan make:controller Admin\TUsersController -r
php artisan make:controller Admin\DashboardController

Ключ 'r' создаст с методами по умолчанию.

---------------------------------------------------------------------
app/Http/Controllers/Admin/TPostsController.php

<?php

namespace App\Http\Controllers\Admin;

use App\Models\TPosts;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;

class TPostsController extends Controller
{
    public function index()
    {
        $posts = TPosts::all();
        return view ('admin.posts.index', compact('posts'));
    }

    public function create()
    {
        return view ('admin.posts.create');
    }

    public function store(Request $request)
    {
	// 2 способа:
        //TPosts::create($request->all());
        //return redirect()->route('admin.posts.index');
        $newpost = new TPosts($request->all());
        $newpost->save();
        return redirect()->route('admin.posts.index');
    }

    public function show($id)
    {
        // Метод show не использовал. Не вижу смысла - все отображается в методе edit.
	// Можно создать кнопку view и использовать данные метод (show).
    }

    public function edit($id)
    {
        $post = TPosts::findOrFail($id);
        return view ('admin.posts.edit', compact('post'));
    }

    public function update(Request $request, $id)
    {
        TPosts::findOrFail($id)->update($request->all());
        return redirect()->route('admin.posts.index');
    }

    public function destroy($id)
    {
        TPosts::destroy($id);
        return redirect()->route('admin.posts.index');
    }
}

---------------------------------------------------------------------

app/Http/Controllers/Admin/TOtdelsController.php

<?php

namespace App\Http\Controllers\Admin;

use App\Models\TOtdels;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;

class TOtdelsController extends Controller
{
    public function index()
    {
        $otdels = TOtdels::all();
            return view ('admin.otdels.index',compact('otdels'));
    }

    public function create()
    {
        return view ('admin.otdels.create');
    }

    public function store(Request $request)
    {
        TOtdels::create($request->all());
        return redirect()->route('admin.otdels.index');
    }

    public function show($id)
    {
        //
    }

    public function edit($id)
    {
        $otdel = TOtdels::findOrFail($id);
        return view ('admin.otdels.edit', compact('otdel'));
    }

    public function update(Request $request, $id)
    {
        TOtdels::findOrFail($id)->update($request->all());
        return redirect()->route('admin.otdels.index');
    }

    public function destroy($id)
    {
        TOtdels::destroy($id);
        return redirect()->route('admin.otdels.index');

    }
}

---------------------------------------------------------------------

app/Http/Controllers/Admin/TUsersController.php

<?php

namespace App\Http\Controllers\Admin;

use App\Models\TOtdels;
use App\Models\TPosts;
use App\Models\TUsers;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;

class TUsersController extends Controller
{
    public function index()
    {
	// Здесь выводим Отдел, потом пользователей принадлежащих к отделу, также вывод долности по id.
	// getUsers принадлежит модели TOtdels, а getPost модели Tusers, т.е. тут вложенный запрос! И чтобы облегчить его,
	// из таблицы t_posts выбираем только id и post (getPost:id,post).
	// Выполненные SQL-запросы видны в debugger:
	// select * from `t_otdels`
	// select * from `t_users` where `t_users`.`otdel_id` in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)
 	// select `id`, `post` from `t_posts` where `t_posts`.`id` in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17)
		
        $otdels = TOtdels::with('getUsers.getPost:id,post')->get()->sortBy('id');
        return view('admin.users.index', compact('otdels'));
    }

    public function create()
    {
        $posts = TPosts::all();
        $otdels = TOtdels::all();
        return view ('admin.users.create',compact('posts', 'otdels'));
    }

    public function store(Request $request)
    {
        TUsers::create($request->all());
        return redirect()->route('admin.users.index');
    }

    public function show($id)
    {
        //
    }

    public function edit($id)
    {
        $posts = TPosts::all();
        $otdels = TOtdels::all();
        $user = TUsers::findOrFail($id);
        return view ('admin.users.edit', compact('user', 'posts', 'otdels'));
    }

    public function update(Request $request, $id)
    {
        TUsers::findOrFail($id)->update($request->all());
        return redirect()->route('admin.users.index');
    }

    public function destroy($id)
    {
        TUsers::destroy($id);
        return redirect()->route('admin.users.index');
    }
}

---------------------------------------------------------------------

На dashboard выведем статистику - количество записей по должностям, отделам и юзерам, для примера.

app/Http/Controllers/Admin/DashboardController.php

<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\TUsers;
use App\Models\TPosts;
use App\Models\TOtdels;

class DashboardController extends Controller
{
    public function index ()
    {
        $users = TUsers::all()->count();
        $posts = TPosts::all()->count();
        $otdels = TOtdels::all()->count();

        return view('admin.dashboard', compact('users','posts', 'otdels'));
    }
}
